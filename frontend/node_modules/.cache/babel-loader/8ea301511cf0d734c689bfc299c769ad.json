{"ast":null,"code":"import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n\n    if (!proceed) {\n      return;\n    }\n  }\n\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/core/events/onTouchEnd.js"],"names":["now","nextTick","onTouchEnd","event","swiper","data","touchEventsData","pointerIndex","evCache","findIndex","cachedEv","pointerId","splice","includes","type","proceed","browser","isSafari","isWebView","params","touches","rtlTranslate","rtl","slidesGrid","enabled","simulateTouch","pointerType","e","originalEvent","allowTouchCallbacks","emit","isTouched","isMoved","grabCursor","setGrabCursor","startMoving","allowSlideNext","allowSlidePrev","touchEndTime","timeDiff","touchStartTime","allowClick","pathTree","path","composedPath","updateClickedSlide","target","lastClickTime","destroyed","swipeDirection","diff","currentTranslate","startTranslate","currentPos","followFinger","translate","cssMode","freeMode","stopIndex","groupSize","slidesSizesGrid","i","length","slidesPerGroupSkip","slidesPerGroup","increment","rewindFirstIndex","rewindLastIndex","rewind","isBeginning","virtual","slides","isEnd","ratio","longSwipesMs","longSwipes","slideTo","activeIndex","longSwipesRatio","Math","abs","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl"],"mappings":"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","sourcesContent":["import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}