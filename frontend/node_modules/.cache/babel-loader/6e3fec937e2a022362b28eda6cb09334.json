{"ast":null,"code":"/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40; // Directions locks\n\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false; // Check that swiper should be inside of visible area of window\n\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (!inView) return undefined;\n    }\n\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n\n    emit('keyPress', kc);\n    return undefined;\n  }\n\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/modules/keyboard/keyboard.js"],"names":["getWindow","getDocument","elementOffset","elementParents","Keyboard","swiper","extendParams","on","emit","document","window","keyboard","enabled","onlyInViewport","pageUpDown","handle","event","rtlTranslate","rtl","e","originalEvent","kc","keyCode","charCode","params","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","allowSlideNext","isHorizontal","isVertical","allowSlidePrev","shiftKey","altKey","ctrlKey","metaKey","undefined","activeElement","nodeName","toLowerCase","inView","el","slideClass","length","slideActiveClass","swiperWidth","clientWidth","swiperHeight","clientHeight","windowWidth","innerWidth","windowHeight","innerHeight","swiperOffset","left","scrollLeft","swiperCoord","top","i","point","preventDefault","returnValue","slideNext","slidePrev","enable","addEventListener","disable","removeEventListener","Object","assign"],"mappings":"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","sourcesContent":["/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}"]},"metadata":{},"sourceType":"module"}