{"ast":null,"code":"import React from 'react';\n\nfunction isChildSwiperSlide(child) {\n  return child.type && child.type.displayName && child.type.displayName.includes('SwiperSlide');\n}\n\nfunction processChildren(c) {\n  const slides = [];\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.children) {\n      processChildren(child.props.children).forEach(slide => slides.push(slide));\n    }\n  });\n  return slides;\n}\n\nfunction getChildren(c) {\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.slot && slots[child.props.slot]) {\n      slots[child.props.slot].push(child);\n    } else if (child.props && child.props.children) {\n      const foundSlides = processChildren(child.props.children);\n\n      if (foundSlides.length > 0) {\n        foundSlides.forEach(slide => slides.push(slide));\n      } else {\n        slots['container-end'].push(child);\n      }\n    } else {\n      slots['container-end'].push(child);\n    }\n  });\n  return {\n    slides,\n    slots\n  };\n}\n\nexport { getChildren };","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/react/get-children.js"],"names":["React","isChildSwiperSlide","child","type","displayName","includes","processChildren","c","slides","Children","toArray","forEach","push","props","children","slide","getChildren","slots","slot","foundSlides","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,SAAOA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWC,WAAzB,IAAwCF,KAAK,CAACC,IAAN,CAAWC,WAAX,CAAuBC,QAAvB,CAAgC,aAAhC,CAA/C;AACD;;AACD,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,QAAMC,MAAM,GAAG,EAAf;AACAR,EAAAA,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBH,CAAvB,EAA0BI,OAA1B,CAAkCT,KAAK,IAAI;AACzC,QAAID,kBAAkB,CAACC,KAAD,CAAtB,EAA+B;AAC7BM,MAAAA,MAAM,CAACI,IAAP,CAAYV,KAAZ;AACD,KAFD,MAEO,IAAIA,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACW,KAAN,CAAYC,QAA/B,EAAyC;AAC9CR,MAAAA,eAAe,CAACJ,KAAK,CAACW,KAAN,CAAYC,QAAb,CAAf,CAAsCH,OAAtC,CAA8CI,KAAK,IAAIP,MAAM,CAACI,IAAP,CAAYG,KAAZ,CAAvD;AACD;AACF,GAND;AAOA,SAAOP,MAAP;AACD;;AACD,SAASQ,WAAT,CAAqBT,CAArB,EAAwB;AACtB,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMS,KAAK,GAAG;AACZ,uBAAmB,EADP;AAEZ,qBAAiB,EAFL;AAGZ,qBAAiB,EAHL;AAIZ,mBAAe;AAJH,GAAd;AAMAjB,EAAAA,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuBH,CAAvB,EAA0BI,OAA1B,CAAkCT,KAAK,IAAI;AACzC,QAAID,kBAAkB,CAACC,KAAD,CAAtB,EAA+B;AAC7BM,MAAAA,MAAM,CAACI,IAAP,CAAYV,KAAZ;AACD,KAFD,MAEO,IAAIA,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACW,KAAN,CAAYK,IAA3B,IAAmCD,KAAK,CAACf,KAAK,CAACW,KAAN,CAAYK,IAAb,CAA5C,EAAgE;AACrED,MAAAA,KAAK,CAACf,KAAK,CAACW,KAAN,CAAYK,IAAb,CAAL,CAAwBN,IAAxB,CAA6BV,KAA7B;AACD,KAFM,MAEA,IAAIA,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACW,KAAN,CAAYC,QAA/B,EAAyC;AAC9C,YAAMK,WAAW,GAAGb,eAAe,CAACJ,KAAK,CAACW,KAAN,CAAYC,QAAb,CAAnC;;AACA,UAAIK,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BD,QAAAA,WAAW,CAACR,OAAZ,CAAoBI,KAAK,IAAIP,MAAM,CAACI,IAAP,CAAYG,KAAZ,CAA7B;AACD,OAFD,MAEO;AACLE,QAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBL,IAAvB,CAA4BV,KAA5B;AACD;AACF,KAPM,MAOA;AACLe,MAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBL,IAAvB,CAA4BV,KAA5B;AACD;AACF,GAfD;AAgBA,SAAO;AACLM,IAAAA,MADK;AAELS,IAAAA;AAFK,GAAP;AAID;;AACD,SAASD,WAAT","sourcesContent":["import React from 'react';\nfunction isChildSwiperSlide(child) {\n  return child.type && child.type.displayName && child.type.displayName.includes('SwiperSlide');\n}\nfunction processChildren(c) {\n  const slides = [];\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.children) {\n      processChildren(child.props.children).forEach(slide => slides.push(slide));\n    }\n  });\n  return slides;\n}\nfunction getChildren(c) {\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.slot && slots[child.props.slot]) {\n      slots[child.props.slot].push(child);\n    } else if (child.props && child.props.children) {\n      const foundSlides = processChildren(child.props.children);\n      if (foundSlides.length > 0) {\n        foundSlides.forEach(slide => slides.push(slide));\n      } else {\n        slots['container-end'].push(child);\n      }\n    } else {\n      slots['container-end'].push(child);\n    }\n  });\n  return {\n    slides,\n    slots\n  };\n}\nexport { getChildren };"]},"metadata":{},"sourceType":"module"}