{"ast":null,"code":"export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  swiper.recalcSlides();\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/modules/manipulation/methods/removeSlide.js"],"names":["removeSlide","slidesIndexes","swiper","params","activeIndex","activeIndexBuffer","loop","loopedSlides","loopDestroy","newActiveIndex","indexToRemove","i","length","slides","remove","Math","max","recalcSlides","loopCreate","observer","isElement","update","slideTo"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,aAArB,EAAoC;AACjD,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFF,MAHJ;AAIA,MAAIG,iBAAiB,GAAGD,WAAxB;;AACA,MAAID,MAAM,CAACG,IAAX,EAAiB;AACfD,IAAAA,iBAAiB,IAAIH,MAAM,CAACK,YAA5B;AACAL,IAAAA,MAAM,CAACM,WAAP;AACD;;AACD,MAAIC,cAAc,GAAGJ,iBAArB;AACA,MAAIK,aAAJ;;AACA,MAAI,OAAOT,aAAP,KAAyB,QAAzB,IAAqC,YAAYA,aAArD,EAAoE;AAClE,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,aAAa,CAACW,MAAlC,EAA0CD,CAAC,IAAI,CAA/C,EAAkD;AAChDD,MAAAA,aAAa,GAAGT,aAAa,CAACU,CAAD,CAA7B;AACA,UAAIT,MAAM,CAACW,MAAP,CAAcH,aAAd,CAAJ,EAAkCR,MAAM,CAACW,MAAP,CAAcH,aAAd,EAA6BI,MAA7B;AAClC,UAAIJ,aAAa,GAAGD,cAApB,EAAoCA,cAAc,IAAI,CAAlB;AACrC;;AACDA,IAAAA,cAAc,GAAGM,IAAI,CAACC,GAAL,CAASP,cAAT,EAAyB,CAAzB,CAAjB;AACD,GAPD,MAOO;AACLC,IAAAA,aAAa,GAAGT,aAAhB;AACA,QAAIC,MAAM,CAACW,MAAP,CAAcH,aAAd,CAAJ,EAAkCR,MAAM,CAACW,MAAP,CAAcH,aAAd,EAA6BI,MAA7B;AAClC,QAAIJ,aAAa,GAAGD,cAApB,EAAoCA,cAAc,IAAI,CAAlB;AACpCA,IAAAA,cAAc,GAAGM,IAAI,CAACC,GAAL,CAASP,cAAT,EAAyB,CAAzB,CAAjB;AACD;;AACDP,EAAAA,MAAM,CAACe,YAAP;;AACA,MAAId,MAAM,CAACG,IAAX,EAAiB;AACfJ,IAAAA,MAAM,CAACgB,UAAP;AACD;;AACD,MAAI,CAACf,MAAM,CAACgB,QAAR,IAAoBjB,MAAM,CAACkB,SAA/B,EAA0C;AACxClB,IAAAA,MAAM,CAACmB,MAAP;AACD;;AACD,MAAIlB,MAAM,CAACG,IAAX,EAAiB;AACfJ,IAAAA,MAAM,CAACoB,OAAP,CAAeb,cAAc,GAAGP,MAAM,CAACK,YAAvC,EAAqD,CAArD,EAAwD,KAAxD;AACD,GAFD,MAEO;AACLL,IAAAA,MAAM,CAACoB,OAAP,CAAeb,cAAf,EAA+B,CAA/B,EAAkC,KAAlC;AACD;AACF","sourcesContent":["export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}"]},"metadata":{},"sourceType":"module"}