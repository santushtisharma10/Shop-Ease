{"ast":null,"code":"export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/core/update/updateProgress.js"],"names":["updateProgress","translate","swiper","multiplier","rtlTranslate","params","translatesDiff","maxTranslate","minTranslate","progress","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","Math","abs","isEndRounded","loop","firstSlideIndex","getSlideIndexByData","lastSlideIndex","slides","length","firstSlideTranslate","slidesGrid","lastSlideTranslate","translateMax","translateAbs","Object","assign","watchSlidesProgress","centeredSlides","autoHeight","updateSlidesProgress","emit"],"mappings":"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","sourcesContent":["export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}"]},"metadata":{},"sourceType":"module"}