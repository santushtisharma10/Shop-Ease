{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/core/modules/resize/resize.js"],"names":["getWindow","Resize","swiper","on","emit","window","observer","animationFrame","resizeHandler","destroyed","initialized","createObserver","ResizeObserver","entries","requestAnimationFrame","width","height","newWidth","newHeight","forEach","contentBoxSize","contentRect","target","el","inlineSize","blockSize","observe","removeObserver","cancelAnimationFrame","unobserve","orientationChangeHandler","params","resizeObserver","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}"]},"metadata":{},"sourceType":"module"}