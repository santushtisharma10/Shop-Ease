{"ast":null,"code":"import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector) {\n  let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/core/events/onTouchStart.js"],"names":["getWindow","getDocument","now","closestElement","selector","base","__closestFrom","el","assignedSlot","found","closest","getRootNode","host","onTouchStart","event","swiper","document","window","data","touchEventsData","evCache","push","params","touches","enabled","simulateTouch","pointerType","animating","preventInteractionOnTransition","cssMode","loop","loopFix","e","originalEvent","targetEl","target","touchEventsTarget","wrapperEl","contains","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","allowClick","swipeHandler","currentX","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","Object","assign","allowTouchCallbacks","isScrolling","undefined","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","matches","focusableElements","nodeName","activeElement","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","emit"],"mappings":"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","sourcesContent":["import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}"]},"metadata":{},"sourceType":"module"}