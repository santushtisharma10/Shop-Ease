{"ast":null,"code":"import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {// newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n\n        return thumbsElement;\n      };\n\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","map":{"version":3,"sources":["C:/Users/Santushti/Desktop/santushti/Shop-Ease/node_modules/swiper/modules/thumbs/thumbs.js"],"names":["getDocument","elementChildren","isObject","Thumb","swiper","extendParams","on","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","initialized","swiperCreated","onThumbClick","thumbsSwiper","destroyed","clickedIndex","clickedSlide","classList","contains","params","slideToIndex","loop","parseInt","getAttribute","slideToLoop","slideTo","init","thumbsParams","SwiperClass","constructor","Object","assign","originalParams","watchSlidesProgress","slideToClickedSlide","update","thumbsSwiperParams","el","add","initial","slidesPerView","slidesPerViewDynamic","thumbsToActivate","thumbActiveClass","centeredSlides","Math","floor","slides","forEach","slideEl","remove","virtual","enabled","i","slidesEl","realIndex","useOffset","currentThumbsIndex","activeIndex","newThumbsIndex","direction","newThumbsSlide","filter","indexOf","previousIndex","visibleSlidesIndexes","slidesPerGroup","undefined","HTMLElement","document","getThumbsElementAndInit","thumbsElement","querySelector","onThumbsSwiper","e","detail","removeEventListener","addEventListener","watchForThumbsToAppear","requestAnimationFrame","_s","duration","setTransition","destroy"],"mappings":"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","sourcesContent":["import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}"]},"metadata":{},"sourceType":"module"}